#!/usr/bin/env node

var parseArgs = require('minimist');
var argv = parseArgs(process.argv.slice(2));
var nb = require('../')(argv);
var debug = require('debug')('benchmark:nb');
var log = console.log;

nb.on('all connected', handleAllConnected);
nb.on('exit', handleExit);

// hook `Ctrl + C`
process.on('SIGINT', handleQuit);

// start benchmarkding
nb.run();


// internal handle funcs

function handleAllConnected(nClients){
  debug('all clients: '+ nClients +' connected, ready to emit!');

  log(['\n\n', //seperate lines
       '########################################',
       '####                                ####',
       '####   socket.io benchmark tool     ####',
       '####                                ####',
       '####            v 0.0.1             ####',
       '####                                ####',
       '########################################',
       '',
       'e.g.: -n 10000 -c 10 --ioc 100',].join('\n'));

  // repl util for mastering benchmark tool
  process.stdin.setEncoding('utf8');
  process.stdin.on('readable', function(){
    var chunk = process.stdin.read();
    if (chunk !== null) {

      var args = parseArgs(chunk.split(' '));
      process.stdout.write('data: ' + JSON.stringify(args) + '\n');

    }
  });

  process.stdin.on('end', function(){
    process.stdout.write('end');
  });
}

function handleExit(){
  debug('Quit node benchmark process!');
  process.exit(0);
}

function handleQuit() {
  debug("Stoping workers elegantly...");

  nb.stop();
}